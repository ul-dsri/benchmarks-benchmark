# SPDX-FileCopyrightText: 2024 UL Research Institutes
# SPDX-License-Identifier: Apache-2.0

stages:
  - test
  - build
  - deploy

variables:
  MKDOCS_REQUIREMENTS: -r requirements.txt

include:
  - project: buildgarden/pipelines/container
    ref: 0.3.1
    file:
      - container-docker.yml
  - project: buildgarden/pipelines/detect-secrets
    ref: 0.2.1
    file:
      - detect-secrets.yml
  - project: buildgarden/pipelines/mkdocs
    ref: 0.2.0
    file:
      - mkdocs-build.yml
  - project: buildgarden/pipelines/pages
    ref: 0.1.1
    file:
      - pages.yml
  - project: buildgarden/pipelines/s3
    ref: 0.2.0
    file:
      - s3-sync-latest.yml

container-docker:
  stage: test

mkdocs-build:
  image: registry.gitlab.com/ul-dsri/party-paper
  script:
    - apt-get update -y
    - apt-get install -y --no-install-recommends git make
    - make
    - mv site/ public/
  artifacts:
    paths:
      - public
      - docs/pdf

s3-sync-latest:
  script:
    - apk add --no-cache curl
    - curl -o /tmp/mc https://dl.min.io/client/mc/release/linux-amd64/mc
    - install /tmp/mc /usr/local/bin/mc
    - rm /tmp/mc
    - mc --version
    - mc alias set "$S3_ALIAS" "$S3_HOSTNAME" "$S3_ACCESS_KEY" "$S3_SECRET_KEY"
    - export S3_TARGET="${S3_ALIAS}/${S3_BUCKET}/papers/party-papers/"

    # Conditionally upload the questionnaire html
    - ls -la ./docs/data/questionnaire.html
    - ./scripts/conditional-upload-questionnaire.sh ./docs/data/questionnaire.html

    # Initialize pdf upload flag
    - UPLOAD_FLAG_FILE="uploaded_true"
    - rm -f "$UPLOAD_FLAG_FILE"  # Ensure no leftover flag file exists

    # Upload PDFs based on conditional_upload script logic
    - |-
      for normalized_file in ./docs/pdf/*_normalized.pdf
      do
        ./scripts/conditional-upload.sh "$normalized_file"
      done

    # publish index file if uploads happened
    - if [ ! -f "$UPLOAD_FLAG_FILE" ]; then
        echo "No new files uploaded. Exiting.";
        exit 0;
      fi
    - echo 'filename,url' > index.csv
    - >
      mc ls "$S3_TARGET" -r
      | awk '{print $6}'
      | grep ".pdf$"
      | sed -e 's@.*@"&","https://dl.dsri.org/papers/party-papers/&"@g' >> index.csv
    - mc cp index.csv "$S3_TARGET"
